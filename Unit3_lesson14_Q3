def str_to_list(p):
    res = []
    i = 0
    while i <= len(p)-1:
        res.append(int(p[i]))
        i = i+1
    return res

def smaller(p, start):
    n = len(p)
    p0 = p[start]
    i = start + 1
    end = start
    while i <= n-1:
        if p[i] <= p0:
            end += 1
            i += 1
        else:
            break
    return p[start+1:i], end

def bigger(p):
    if p[0] >= p[1]:
        return p[0:0], 0
    else:
        i = 0
        while i <= len(p)-3:
            if p[i+1] >= p[i] and p[i+1] <= p[i+2]:
                start = i+1
            i += 1
            break
        return p[:start], start
            
def numbers_in_lists(string):
    # YOUR CODE
    p = str_to_list(string)
    n = len(p)
    res = []
    res, i = bigger(p)
    while i <= n-1:
        add_list, end = smaller(p, i)
        res = res + [p[i]]
        i = end + 1
        if add_list:
            res.append(add_list) 
    return res
    
    
    
#testcases
string = '1223334444555554444333221'
#print numbers_in_lists(string)

string = '543987'
result = [5,[4,3],9,[8,7]]
#print repr(string), numbers_in_lists(string) == result

string= '987654321'
result = [9,[8,7,6,5,4,3,2,1]]
#print repr(string), numbers_in_lists(string) == result

string = '455532123266'
result = [4, 5, [5, 5, 3, 2, 1, 2, 3, 2], 6, [6]]
#print repr(string), numbers_in_lists(string) == result

string = '123456789'
result = [1, 2, 3, 4, 5, 6, 7, 8, 9]
#print repr(string), numbers_in_lists(string) == result

